stages:
  - nodebuild
  - jekyllbuild
  - deploy

variables:
  GIT_STRATEGY: fetch

bundlejs:
  image: node:7.0.0
  stage: nodebuild
  cache:
    paths:
      - node_modules/
  script:
    - npm install --silent
    - npm run-script build
  artifacts:
    paths:
      - assets/js

jekyll:
  image: ruby:2.3
  stage: jekyllbuild
  script:
  - gem install jekyll jekyll-sitemap jekyll-seo-tag jekyll-feed
  - jekyll build -d public
  dependencies:
    - bundlejs
  artifacts:
    paths:
    - public


# test:
#   image: ruby:2.3
#   stage: test
#   script:
#   - gem install jekyll jekyll-sitemap jekyll-seo-tag jekyll-feed
#   - jekyll build -d test
#   dependencies:
#     - bundlejs
#   artifacts:
#     paths:
#     - test
#   except:
#   - master

pages:
  stage: deploy
  dependencies:
    - jekyll
  artifacts:
    paths:
    - public
  only:
  - master

namecheap:
  stage: deploy
  dependencies:
    - jekyll
  script:
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use a CentOS-based image)
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <<done\r echo "$SSH_PRIVATE_KEY" \rp4$$w0rd\rdone\r

    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - "sftp -P 21098 thepasgk@server221.web-hosting.com:public_html <<< $'put -r public'"
  only:
  - master
